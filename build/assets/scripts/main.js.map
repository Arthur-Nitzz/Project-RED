{"version":3,"sources":["app/assets/scripts/utils/camelCase.js","app/assets/scripts/utils/Router.js","app/assets/scripts/routes/common.js","app/assets/scripts/index.js"],"names":["const"],"mappings":";;;AAAA;;;;;AAKA,gBAAe,UAAA,GAAG,EAAC,UACjB,EAAC,IAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA,IAAG,GAAG;KACjC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;KACtB,KAAK,CAAC,GAAG,CAAC;KACV,GAAG,CAAC,UAAA,IAAI,EAAC,UAAG,EAAC,IAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA,IAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,IAAE,CAAC;KAC9D,IAAI,CAAC,EAAE,CAAC;KACR,KAAK,CAAC,CAAC,CAAC,CAAA,IAAE,CAAA;;ACDf,IAAM,MAAM,GAAC,eAKA,EAAE,MAAM,EAAE;EACrB,IAAM,CAAC,MAAM,GAAG,MAAM,CAAA;CACrB,CAAA;;;;;;;;AAQH,iBAAE,IAAI,kBAAE,KAAK,EAAE,KAAc,EAAE,GAAG,EAAE;iCAAhB,GAAG,MAAM;;EAC3B,IAAQ,IAAI;IACV,KAAO,KAAK,EAAE;IACd,IAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IACpB,OAAS,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,UAAU,CAAA;EACnD,IAAM,IAAI,EAAE;IACV,IAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAA;GAC/B;CACF,CAAA;;;;;;;;;;;AAWH,iBAAE,UAAU,0BAAI;;;;EAEd,IAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;;;EAGrB,QAAU,CAAC,IAAI,CAAC,SAAS;KACpB,WAAW,EAAE;KACb,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;KAClB,KAAK,CAAC,KAAK,CAAC;KACZ,GAAG,CAAC,SAAS,CAAC;KACd,OAAO,CAAC,UAAA,SAAS,EAAC;MACnB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;MACtB,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;KACjC,CAAC,CAAA;;;EAGN,IAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;CAChC,CAAA,AAGH,AAAqB;;AChErB,aAAe;EACb,IAAI,eAAA,IAAI;IACNA,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAA;IAChE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,OAAO,EAAC,EAAK,CAAC,CAAA;GAC3C;CACF,CAAA;;ACDDA,IAAM,MAAM,GAAG;EACb,QAAA,MAAM;CACP,CAAA;;;AAGDA,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAA;;AAEjC;EACE,QAAQ,CAAC,UAAU,KAAK,UAAU;GACjC,QAAQ,CAAC,UAAU,KAAK,SAAS,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC;EACzE;EACA,MAAM,CAAC,UAAU,EAAE,CAAA;CACpB,MAAM;EACL,QAAQ,CAAC,gBAAgB;IACvB,kBAAkB;IAClB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;IAC9B,KAAK;GACN,CAAA;CACF","file":"main.js","sourcesContent":["/**\n * the most terrible camelizer on the internet, guaranteed!\n * @param {string} str String that isn't camel-case, e.g., CAMeL_CaSEiS-harD\n * @return {string} String converted to camel-case, e.g., camelCaseIsHard\n */\nexport default str =>\n  `${str.charAt(0).toLowerCase()}${str\n    .replace(/[\\W_]/g, '|')\n    .split('|')\n    .map(part => `${part.charAt(0).toUpperCase()}${part.slice(1)}`)\n    .join('')\n    .slice(1)}`\n","import camelCase from './camelCase'\n\n/**\n * DOM-based Routing\n *\n * Based on {@link http://goo.gl/EUTi53|Markup-based Unobtrusive Comprehensive DOM-ready Execution} by Paul Irish\n *\n * The routing fires all common scripts, followed by the page specific scripts.\n * Add additional events for more control over timing e.g. a finalize event\n */\nclass Router {\n  /**\n   * Create a new Router\n   * @param {Object} routes\n   */\n  constructor (routes) {\n    this.routes = routes\n  }\n\n  /**\n   * Fire Router events\n   * @param {string} route DOM-based route derived from body classes (`<body class=\"...\">`)\n   * @param {string} [event] Events on the route. By default, `init` and `finalize` events are called.\n   * @param {string} [arg] Any custom argument to be passed to the event.\n   */\n  fire (route, event = 'init', arg) {\n    const fire =\n      route !== '' &&\n      this.routes[route] &&\n      typeof this.routes[route][event] === 'function'\n    if (fire) {\n      this.routes[route][event](arg)\n    }\n  }\n\n  /**\n   * Automatically load and fire Router events\n   *\n   * Events are fired in the following order:\n   *  * common init\n   *  * page-specific init\n   *  * page-specific finalize\n   *  * common finalize\n   */\n  loadEvents () {\n    // Fire common init JS\n    this.fire('common')\n\n    // Fire page-specific init JS, and then finalize JS\n    document.body.className\n      .toLowerCase()\n      .replace(/-/g, '_')\n      .split(/\\s+/)\n      .map(camelCase)\n      .forEach(className => {\n        this.fire(className)\n        this.fire(className, 'finalize')\n      })\n\n    // Fire common finalize JS\n    this.fire('common', 'finalize')\n  }\n}\n\nexport default Router\n","export default {\n  init () {\n    const content = document.querySelector('.page-content').children\n    Array.from(content).forEach(element => {})\n  },\n}\n","import Router from './utils/Router.js'\nimport common from './routes/common.js'\n\n// Modify the 'routes' object to include or remove other routes\nconst routes = {\n  common,\n}\n\n// Usually, you won't need to modify anything below this line.\nconst router = new Router(routes)\n\nif (\n  document.readyState === 'complete' ||\n  (document.readyState !== 'loading' && !document.documentElement.doScroll)\n) {\n  router.loadEvents()\n} else {\n  document.addEventListener(\n    'DOMContentLoaded',\n    router.loadEvents.bind(router),\n    false\n  )\n}\n"],"sourceRoot":"../../app"}