{"version":3,"sources":["index.styl","main.css","common/normalize.styl","common/helpers.styl","common/global.styl","config/mixins.styl","../../../node_modules/rupture/rupture/index.styl"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["/*\n\tThe '@require' can be relative to any of this items:\n\t- 'node_modules' directory\n\t- 'gulpfile.js' directory\n\t- 'assets/styles' directory\n*/\n\n// Relative to node_modules directory\n@require \"rolleiflex/src/index.styl\"\n@require \"rupture/rupture/index.styl\"\n\n// Relative to assets/styles directory\n// Configuration files\n@require \"config/setup\"\n@require \"config/external\"\n@require \"config/mixins\"\n@require \"config/*\"\n\n// General style files\n@require \"common/normalize\"\n@require \"common/helpers\"\n@require \"common/global\"\n\n// Overrides\n@require \"common/overrides\"\n","/*\n\tThe '@require' can be relative to any of this items:\n\t- 'node_modules' directory\n\t- 'gulpfile.js' directory\n\t- 'assets/styles' directory\n*/\n*,\n*:after,\n*:before {\n  box-sizing: border-box;\n}\nhtml {\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  font: 16px/1 sans-serif;\n}\nbody {\n  margin: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\nblockquote,\nfigure,\nh1,\nh2,\nh3,\nh4,\nol,\np,\nul {\n  margin: 0;\n  padding: 0;\n}\nli,\nmain {\n  display: block;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n}\nstrong {\n  font-weight: bold;\n}\na,\nbutton {\n  transition: 0.3s all ease;\n  color: inherit;\n}\na {\n  text-decoration: none;\n}\nbutton,\ninput,\ntextarea {\n  margin: 0;\n  border-radius: 0;\n  -webkit-appearance: none;\n}\nbutton:focus,\ninput:focus,\ntextarea:focus,\nbutton:focus:active,\ninput:focus:active,\ntextarea:focus:active {\n  outline: none;\n}\nbutton {\n  font: inherit;\n  overflow: visible;\n  cursor: pointer;\n  letter-spacing: inherit;\n  border: 0;\n  background: none;\n  -webkit-font-smoothing: inherit;\n}\n::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n:focus {\n  outline: 0;\n}\nimg {\n  max-width: 100%;\n  height: auto;\n  border: 0;\n}\n.h-img-responsive {\n  max-width: 100%;\n  display: block;\n  height: auto;\n}\n.h-color-pink {\n  color: #850047;\n}\n.h-bg-pink {\n  background-color: #850047;\n}\n.h-color-purple {\n  color: #93648d;\n}\n.h-bg-purple {\n  background-color: #93648d;\n}\n.h-color-green {\n  color: #7bc8a4;\n}\n.h-bg-green {\n  background-color: #7bc8a4;\n}\n.h-color-blue {\n  color: #4cc3d9;\n}\n.h-bg-blue {\n  background-color: #4cc3d9;\n}\n.h-color-yellow {\n  color: #ffc65d;\n}\n.h-bg-yellow {\n  background-color: #ffc65d;\n}\n.h-color-red {\n  color: #f16745;\n}\n.h-bg-red {\n  background-color: #f16745;\n}\n.h-color-brown {\n  color: #664f36;\n}\n.h-bg-brown {\n  background-color: #664f36;\n}\n.h-color-white {\n  color: #fff;\n}\n.h-bg-white {\n  background-color: #fff;\n}\n.h-color-gray {\n  color: #404040;\n}\n.h-bg-gray {\n  background-color: #404040;\n}\n.h-color-black {\n  color: #000;\n}\n.h-bg-black {\n  background-color: #000;\n}\n.h-color-lastfmRed {\n  color: #b20000;\n}\n.h-bg-lastfmRed {\n  background-color: #b20000;\n}\n.h-color-linkedinBlue {\n  color: #0077b5;\n}\n.h-bg-linkedinBlue {\n  background-color: #0077b5;\n}\nbody {\n  font-size: 22px;\n  line-height: 1.4;\n  font-family: Courier New, Courier, monospace;\n  background-color: #000;\n  color: #fff;\n  overflow-x: hidden;\n  animation: turn-on 1.5s linear;\n}\n@media only screen and (max-width: 767px) {\n  body {\n    line-height: 1.6;\n    font-size: 18px;\n  }\n}\nh2 {\n  font-size: 22px;\n  margin-bottom: 5px;\n  margin-top: 55px;\n}\np {\n  margin-bottom: 25px;\n}\n@media only screen and (max-width: 767px) {\n  p {\n    margin-bottom: 15px;\n  }\n}\nul {\n  margin-bottom: 25px;\n}\nul li {\n  margin-bottom: 5px;\n}\n@media only screen and (max-width: 767px) {\n  ul li {\n    margin-bottom: 25px;\n  }\n}\nsmall {\n  font-size: 16px;\n}\n.page-content {\n  padding: 50px;\n  opacity: 0;\n  animation: glitch 1s linear infinite, flicker 0.3s infinite;\n}\n@media only screen and (max-width: 767px) {\n  .page-content {\n    padding: 50px 25px;\n  }\n}\n.page-content a {\n  display: inline;\n  position: relative;\n  word-wrap: break-word;\n}\n@media only screen and (max-width: 767px) {\n  .page-content a {\n    color: #000;\n    background-color: #fff;\n  }\n  .page-content a:hover {\n    background-size: 100% 100%;\n  }\n}\n@media only screen and (min-width: 768px) {\n  .page-content a {\n    display: inline-block;\n  }\n  .page-content a::before,\n  .page-content a::after {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: #fff;\n    transition: height 0.3s ease;\n    z-index: -1;\n  }\n  .page-content a::after {\n    z-index: -2;\n    background-image: url(\"../images/rainbow-static.gif\");\n    opacity: 0.4;\n  }\n}\n.page-content a:hover {\n  color: #000;\n}\n.page-content a:hover::before {\n  z-index: -2;\n  height: 100%;\n}\n.page-content a:hover::after {\n  z-index: -1;\n  height: 100%;\n}\n.page-content a[href*='last.fm'] {\n  color: inherit;\n}\n@media only screen and (max-width: 767px) {\n  .page-content a[href*='last.fm'] {\n    background-color: #b20000;\n  }\n}\n.page-content a[href*='last.fm']::before {\n  background-color: #b20000;\n}\n.page-content a[href*='last.fm']::after {\n  opacity: 0.2;\n}\n.page-content a[href*='linkedin'] {\n  color: inherit;\n}\n@media only screen and (max-width: 767px) {\n  .page-content a[href*='linkedin'] {\n    background-color: #0077b5;\n  }\n}\n.page-content a[href*='linkedin']::before {\n  background-color: #0077b5;\n}\n.page-content a[href*='linkedin']::after {\n  opacity: 0.2;\n}\n.page-content a[href*='instagram.com'] {\n  color: inherit;\n}\n@media only screen and (max-width: 767px) {\n  .page-content a[href*='instagram.com'] {\n    background-color: transparent;\n    background-image: radial-gradient(circle at 33% 100%, #fed373 4%, #f15245 30%, #d92e7f 62%, #9b36b7 85%, #515ecf);\n  }\n}\n.page-content a[href*='instagram.com']::before {\n  background-image: radial-gradient(circle at 33% 100%, #fed373 4%, #f15245 30%, #d92e7f 62%, #9b36b7 85%, #515ecf);\n}\n.page-content a[href*='instagram.com']:hover {\n  color: #fff;\n}\n.page-content a[href*='instagram.com']::after {\n  opacity: 0.2;\n}\n.page-background {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -3;\n  background-image: url(\"../images/static.gif\");\n  background-size: cover;\n  opacity: 0.05;\n}\n.page-background::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  background: linear-gradient(to bottom, rgba(255,0,0,0) 0%, #fffafa 50%, rgba(255,255,255,0.98) 51%, rgba(255,0,0,0) 100%);\n  opacity: 0.8;\n  animation: vline 3s linear infinite;\n  will-change: top;\n}\n@-moz-keyframes vline {\n  0% {\n    top: 0px;\n  }\n  100% {\n    top: 100%;\n  }\n}\n@-webkit-keyframes vline {\n  0% {\n    top: 0px;\n  }\n  100% {\n    top: 100%;\n  }\n}\n@-o-keyframes vline {\n  0% {\n    top: 0px;\n  }\n  100% {\n    top: 100%;\n  }\n}\n@keyframes vline {\n  0% {\n    top: 0px;\n  }\n  100% {\n    top: 100%;\n  }\n}\n@-moz-keyframes flicker {\n  0% {\n    opacity: 0.95;\n  }\n  25% {\n    opacity: 0.9;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.85;\n  }\n}\n@-webkit-keyframes flicker {\n  0% {\n    opacity: 0.95;\n  }\n  25% {\n    opacity: 0.9;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.85;\n  }\n}\n@-o-keyframes flicker {\n  0% {\n    opacity: 0.95;\n  }\n  25% {\n    opacity: 0.9;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.85;\n  }\n}\n@keyframes flicker {\n  0% {\n    opacity: 0.95;\n  }\n  25% {\n    opacity: 0.9;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.85;\n  }\n}\n@-moz-keyframes glitch {\n  0% {\n    transform: scale(1, 1.002);\n  }\n  50% {\n    transform: scale(1, 1.0001);\n  }\n  100% {\n    transform: scale(1.001, 1);\n  }\n}\n@-webkit-keyframes glitch {\n  0% {\n    transform: scale(1, 1.002);\n  }\n  50% {\n    transform: scale(1, 1.0001);\n  }\n  100% {\n    transform: scale(1.001, 1);\n  }\n}\n@-o-keyframes glitch {\n  0% {\n    transform: scale(1, 1.002);\n  }\n  50% {\n    transform: scale(1, 1.0001);\n  }\n  100% {\n    transform: scale(1.001, 1);\n  }\n}\n@keyframes glitch {\n  0% {\n    transform: scale(1, 1.002);\n  }\n  50% {\n    transform: scale(1, 1.0001);\n  }\n  100% {\n    transform: scale(1.001, 1);\n  }\n}\n@-moz-keyframes turn-on {\n  0% {\n    transform: scale(1, 0.8) translate3d(0, 0, 0);\n    filter: brightness(30);\n    opacity: 1;\n  }\n  3.5% {\n    transform: scale(1, 0.8) translate3d(0, 100%, 0);\n  }\n  3.6% {\n    transform: scale(1, 0.8) translate3d(0, -100%, 0);\n    opacity: 1;\n  }\n  9% {\n    transform: scale(1.3, 0.6) translate3d(0, 100%, 0);\n    filter: brightness(30);\n    opacity: 0;\n  }\n  11% {\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    filter: contrast(0) brightness(0);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    filter: contrast(1) brightness(1.2) saturate(1.3);\n    opacity: 1;\n  }\n}\n@-webkit-keyframes turn-on {\n  0% {\n    transform: scale(1, 0.8) translate3d(0, 0, 0);\n    filter: brightness(30);\n    opacity: 1;\n  }\n  3.5% {\n    transform: scale(1, 0.8) translate3d(0, 100%, 0);\n  }\n  3.6% {\n    transform: scale(1, 0.8) translate3d(0, -100%, 0);\n    opacity: 1;\n  }\n  9% {\n    transform: scale(1.3, 0.6) translate3d(0, 100%, 0);\n    filter: brightness(30);\n    opacity: 0;\n  }\n  11% {\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    filter: contrast(0) brightness(0);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    filter: contrast(1) brightness(1.2) saturate(1.3);\n    opacity: 1;\n  }\n}\n@-o-keyframes turn-on {\n  0% {\n    transform: scale(1, 0.8) translate3d(0, 0, 0);\n    filter: brightness(30);\n    opacity: 1;\n  }\n  3.5% {\n    transform: scale(1, 0.8) translate3d(0, 100%, 0);\n  }\n  3.6% {\n    transform: scale(1, 0.8) translate3d(0, -100%, 0);\n    opacity: 1;\n  }\n  9% {\n    transform: scale(1.3, 0.6) translate3d(0, 100%, 0);\n    filter: brightness(30);\n    opacity: 0;\n  }\n  11% {\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    filter: contrast(0) brightness(0);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    filter: contrast(1) brightness(1.2) saturate(1.3);\n    opacity: 1;\n  }\n}\n@keyframes turn-on {\n  0% {\n    transform: scale(1, 0.8) translate3d(0, 0, 0);\n    filter: brightness(30);\n    opacity: 1;\n  }\n  3.5% {\n    transform: scale(1, 0.8) translate3d(0, 100%, 0);\n  }\n  3.6% {\n    transform: scale(1, 0.8) translate3d(0, -100%, 0);\n    opacity: 1;\n  }\n  9% {\n    transform: scale(1.3, 0.6) translate3d(0, 100%, 0);\n    filter: brightness(30);\n    opacity: 0;\n  }\n  11% {\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    filter: contrast(0) brightness(0);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1, 1) translate3d(0, 0, 0);\n    filter: contrast(1) brightness(1.2) saturate(1.3);\n    opacity: 1;\n  }\n}\n","*\n*:after\n*:before\n\tbox-sizing: border-box\n\nhtml\n\t-ms-text-size-adjust: 100%\n\t-webkit-text-size-adjust: 100%\n\tfont: 16px/1 sans-serif\n\nbody\n\tmargin: 0\n\t-moz-osx-font-smoothing: grayscale\n\t-webkit-font-smoothing: antialiased\n\nblockquote\nfigure\nh1\nh2\nh3\nh4\nol\np\nul\n\tmargin: 0\n\tpadding: 0\n\nli\nmain\n\tdisplay: block\n\nh1\nh2\nh3\nh4\nh5\nh6\n\tfont-size: inherit\n\nstrong\n\tfont-weight: bold\n\na\nbutton\n\ttransition: .3s all ease\n\tcolor: inherit\n\na\n\ttext-decoration: none\n\nbutton\ninput\ntextarea\n\tmargin: 0\n\tborder-radius: 0\n\t-webkit-appearance: none\n\t\n\t&:focus\n\t&:focus:active\n\t\toutline: none\n\n\nbutton\n\tfont: inherit\n\toverflow: visible\n\tcursor: pointer\n\tletter-spacing: inherit\n\tborder: 0\n\tbackground: none\n\t-webkit-font-smoothing: inherit\n\n::-moz-focus-inner\n\tpadding: 0\n\tborder: 0\n\n:focus\n\toutline: 0\n\nimg\n\tmax-width: 100%\n\theight: auto\n\tborder: 0\n",".h-img-responsive\n\tmax-width: 100%\n\tdisplay: block\n\theight: auto\n\nfor colorName, colorHex in colors\n\t.h-color-{colorName}\n\t\tcolor: colorHex\n\t\n\t.h-bg-{colorName}\n\t\tbackground-color: colorHex\n","body\n\tfont-size: 22px\n\tline-height: 1.4\n\tfont-family: Courier New, Courier, monospace\n\tbackground-color: colors.black\n\tcolor: colors.white\n\toverflow-x: hidden\n\tanimation: turn-on 1.5s linear\n\n\t+max(xs)\n\t\tline-height: 1.6\n\t\tfont-size: 18px\n\nh2\n\tfont-size: 22px\n\tmargin-bottom: 5px\n\tmargin-top: 55px\n\np\n\tmargin-bottom: 25px\n\t+max(xs)\n\t\tmargin-bottom: 15px\n\nul\n\tmargin-bottom: 25px\n\n\tli\n\t\tmargin-bottom: 5px\n\t\t+max(xs)\n\t\t\tmargin-bottom: 25px\n\nsmall\n\tfont-size: 16px\n\n.page-content\n\tpadding: 50px\n\topacity: 0\n\tanimation: glitch 1s linear infinite, flicker .3s infinite\n\t+max(xs)\n\t\tpadding: 50px 25px\n\ta\n\t\tdisplay: inline\n\t\tposition: relative\n\t\tword-wrap: break-word\n\n\t\t+max(xs)\n\t\t\tcolor: colors.black\n\t\t\tbackground-color: colors.white\n\n\t\t\t&:hover\n\t\t\t\tbackground-size: 100% 100%\n\n\t\t+min(sm)\n\t\t\tdisplay: inline-block\n\t\t\t&::before\n\t\t\t&::after\n\t\t\t\tcontent: ''\n\t\t\t\tdisplay: block\n\t\t\t\tposition: absolute\n\t\t\t\tbottom: 0\n\t\t\t\tleft: 0\n\t\t\t\tsize: 100% 2px\n\t\t\t\tbackground-color: colors.white\n\t\t\t\ttransition: height .3s ease\n\t\t\t\tz-index: layers.underlineStatic\n\n\t\t\t&::after\n\t\t\t\tz-index: layers.underline\n\t\t\t\tbackground-image: url(../images/rainbow-static.gif)\n\t\t\t\topacity: .4\n\n\t\t&:hover\n\t\t\tcolor: colors.black\n\n\t\t\t&::before\n\t\t\t\tz-index: layers.underline\n\t\t\t\theight: 100%\n\n\t\t\t&::after\n\t\t\t\tz-index: layers.underlineStatic\n\t\t\t\theight: 100%\n\n\t\t&[href*='last.fm']\n\t\t\tcolor: inherit\n\t\t\t+max(xs)\n\t\t\t\tbackground-color: colors.lastfmRed\n\t\t\t&::before\n\t\t\t\tbackground-color: colors.lastfmRed\n\t\t\t&::after\n\t\t\t\topacity: .2\n\n\t\t&[href*='linkedin']\n\t\t\tcolor: inherit\n\t\t\t+max(xs)\n\t\t\t\tbackground-color: colors.linkedinBlue\n\t\t\t&::before\n\t\t\t\tbackground-color: colors.linkedinBlue\n\t\t\t&::after\n\t\t\t\topacity: .2\n\n\t\t&[href*='instagram.com']\n\t\t\tcolor: inherit\n\t\t\t+max(xs)\n\t\t\t\tbackground-color: transparent\n\t\t\t\tbackground-image: radial-gradient(circle at 33% 100%, #FED373 4%, #F15245 30%, #D92E7F 62%, #9B36B7 85%, #515ECF)\n\t\t\t&::before\n\t\t\t\tbackground-image: radial-gradient(circle at 33% 100%, #FED373 4%, #F15245 30%, #D92E7F 62%, #9B36B7 85%, #515ECF)\n\t\t\t&:hover\n\t\t\t\tcolor: colors.white\n\t\t\t&::after\n\t\t\t\topacity: .2\n\n.page-background\n\tposition: fixed\n\ttop: 0\n\tleft: 0\n\tsize: 100%\n\tz-index: layers.siteBackground\n\tbackground-image: url(../images/static.gif)\n\tbackground-size: cover\n\topacity: .05\n\n\t&::before\n\t\tcontent: ''\n\t\tposition: absolute\n\t\ttop: 0\n\t\tleft: 0\n\t\twidth: 100%\n\t\theight: 50px\n\t\tbackground: linear-gradient(to bottom, rgba(255,0,0,0) 0%,rgba(255,250,250,1) 50%,rgba(255,255,255,0.98) 51%,rgba(255,0,0,0) 100%)\n\t\topacity: .8\n\t\tanimation: vline 3s linear infinite\n\t\twill-change: top\n\n@keyframes vline\n\t0%\n\t\ttop: 0px\n\t100%\n\t\ttop: 100%\n\n@keyframes flicker\n\t0%\n\t\topacity: .95\n\t25%\n\t\topacity: .9\n\t50%\n\t\topacity: 1\n\t100%\n\t\topacity: .85\n\n@keyframes glitch\n\t0%\n\t\ttransform: scale(1, 1.002)\n\t50%\n\t\ttransform: scale(1, 1.0001)\n\t100%\n\t\ttransform: scale(1.001, 1)\n\n@keyframes turn-on\n\t0%\n\t\ttransform: scale(1,0.8) translate3d(0,0,0)\n\t\tfilter: brightness(30)\n\t\topacity: 1\n\n\t3.5%\n\t\ttransform: scale(1,0.8) translate3d(0,100%,0)\n\n\n\t3.6%\n\t\ttransform: scale(1,0.8) translate3d(0,-100%,0)\n\t\topacity: 1\n\n\n\t9%\n\t\ttransform: scale(1.3,0.6) translate3d(0,100%,0)\n\t\tfilter: brightness(30)\n\t\topacity: 0\n\n\t11%\n\t\ttransform: scale(1,1) translate3d(0,0,0)\n\t\tfilter: contrast(0) brightness(0)\n\t\topacity: 0\n\n\t100%\n\t\ttransform: scale(1,1) translate3d(0,0,0)\n\t\tfilter: contrast(1) brightness(1.2) saturate(1.3)\n\t\topacity: 1\n","// Mixin shortcuts\nmax = to-width\nmin = from-width\n\n// size(width, height)\nsize($width, $height = $width)\n\twidth: $width\n\theight: $height\n\n// rem(px [,base-font-size]), em(px [,base-font-size])\nrem($px, $base = app.baseFontSize)\n\treturn unit($px / $base, 'rem')\n\nem($px, $base = app.baseFontSize)\n\treturn unit($px / $base, 'em')\n\n/*\n * Modified verson of Font-face mixin, by jackbrewer\n * https://github.com/jackbrewer/stylus-mixins/\n */\nfont-face($font-name, $file-path, $weight = 'normal', $style = 'normal')\n\t$url  = 'url(\"' + $file-path + '.woff2\") format(\"woff2\"),'\n\t$url = $url + ' url(\"' + $file-path + '.woff\") format(\"woff\")'\n\t@font-face\n\t\tfont-family: $font-name\n\t\tsrc: unquote($url)\n\t\tfont-weight: unquote($weight)\n\t\tfont-style: unquote($style)\n\n/*\n * Responsive property based on viewport units\n *\n * Usage:\n * responsive: property viewportUnitBase minFontSize maxFontSize, fallbackSize\n */\nresponsive($prop, $responsive, $min, $max = false, $fallback = false)\n\t$responsive-unit = unit($responsive)\n\t$responsive-unitless = $responsive / ($responsive - $responsive + 1)\n\t$min-bp = $min / $responsive-unitless * 100\n\t$max-bp = ($max != false) ? $max / $responsive-unitless * 100 : 0\n\n\t$minQueries = ()\n\t$maxQueries = ()\n\n\t$dimensions = (width height)\n\tif ($responsive-unit == 'vw')\n\t\t$dimensions = (width)\n\telse if ($responsive-unit == 'vh')\n\t\t$dimensions = (height)\n\n\tfor $dimension in $dimensions\n\t\tpush($minQueries, s('(max-%s: %s)', $dimension, $min-bp))\n\n\t\tif ($max)\n\t\t\tpush($maxQueries, s('(min-%s: %s)', $dimension, $max-bp))\n\n\t$minQuery = unquote(join(', ', $minQueries))\n\t@media $minQuery\n\t\t{$prop}: $min\n\n\tif ($max)\n\t\t$maxQuery = unquote(join(', ', $maxQueries))\n\t\t@media $maxQuery\n\t\t\t{$prop}: $max\n\n\tif ($fallback)\n\t\t{$prop}: $fallback\n\n\t{$prop}: $responsive\n\nresponsive-font-size($responsive, $min, $max = false, $fallback = false)\n\tresponsive(font-size, $responsive, $min, $max, $fallback)\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n"],"sourceRoot":"../../app"}