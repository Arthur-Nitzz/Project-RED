.tv {
  background-color: #000;

  /* background-image: url(/assets/images/tv.png);
  background-repeat: no-repeat;
  background-position: center;
  padding: 10% 12% 22% 9%; */
  height: 100vh;
  display: grid;
}

.tv-screen {
  position: relative;
  height: 100%;
  overflow: hidden;
  /* border-radius: 140px / 10%; */
}

.tv-effect--decontrast,
.tv-effect--colors,
.tv-effect--static,
.tv-effect--vignette {
  position: absolute;
  z-index: var(--layer-tv-effects);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* colors */
.tv-effect--colors {
  background-image: url(/assets/images/effect-colored-noise.gif);
  background-size: cover;
  opacity: 0.1;
}

/* static/noise effect */
.tv-effect--static {
  background-image: url(/assets/images/effect-glitch.gif);
  background-size: cover;
  opacity: 0.4;
}

/* vignette */
.tv-effect--vignette {
  background: radial-gradient(circle, transparent 60%, black 100%), transparent;

  @nest [tv-animation='turn-on'] & {
    background: radial-gradient(circle, black 30%, transparent 90%), transparent;
  }
}

/* remove some contrast from the webcam */
.tv-effect--decontrast {
  background-color: #fff;
  opacity: 0.2;

  @nest body:not([using-camera]) & {
    display: none;
  }
}

/* horizontal lines + scan line*/
.tv-effect--crt {
  &::before,
  &::after {
    content: '';
    display: block;
    position: absolute;
    z-index: var(--layer-tv-effects);
    top: 0;
    left: 0;
    width: 100%;
    pointer-events: none;

    /* prevent these effects from being inverted when turning-on */
    @nest [tv-animation='turn-on'] & {
      filter: invert(1);
    }
  }

  &::before {
    height: 90px;
    background: linear-gradient(
      180deg,
      transparent 0,
      #fffafa26 50%,
      transparent
    );
    animation: vline 8s linear infinite;
  }

  &::after {
    height: 100%;
    background-image: linear-gradient(
      0deg,
      rgba(255, 255, 255, 0.03) 50%,
      transparent 0
    );
    background-size: 100% 0.7ch;
  }
}

.tv__content {
  position: relative;
  z-index: var(--layer-content);
  height: 100vh;
  overflow: hidden auto;
  background-color: rgba(0, 0, 0, 0.4);

  @nest [tv-animation='turn-on'] & {
    overflow: hidden;
  }
}

.tv-rec {
  display: inline-flex;
  align-items: center;

  & span {
    content: '';
    display: inline-block;
    width: 0.5rem;
    height: 0.5rem;
    margin-left: 0.5rem;
    background-color: #f00;
    box-shadow: 3px 0 0 var(--glitchy-blue), -3px 0 0 var(--glitchy-red);
    animation: blink 1.4s step-end infinite;
  }

  @nest body:not([using-camera]) & {
    display: none;
  }
}
