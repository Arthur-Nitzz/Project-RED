.tv {
  position: relative;
  background-color: #000;
  overflow: hidden;
  margin: 0 auto;
}

.tv-screen {
  animation: turn-on-transform 0.4s, turn-on-filter 1s;
}

.tv-effect {
  position: absolute;
  z-index: var(--layer-tv-effects);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* colors */
.tv-effect.--static {
  background-size: cover;
  opacity: 0.2;
  background-image: url(/assets/images/effect-static.gif);

  @nest html.webp & {
    background-image: url(/assets/images/effect-static.webp);
  }

  /* todo: animated avif not supported right now */
}

/* static/noise effect */
.tv-effect.--artifacts {
  background-image: url(/assets/images/effect-artifacts.gif);
  background-size: cover;
  opacity: 0.4;

  @nest html.webp & {
    background-image: url(/assets/images/effect-artifacts.webp);
  }

  /* todo: animated avif not supported right now */
}

/* vignette */
.tv-effect.--vignette {
  background: radial-gradient(circle, transparent 60%, black 100%), transparent;
}

/* remove some contrast from the webcam */
.tv-effect.--decontrast {
  background-color: #fff;
  opacity: 0.2;

  @nest body:not([camera]) & {
    display: none;
  }
}

/* horizontal lines + scan line*/
.tv-effect.--crt {
  &::before,
  &::after {
    content: '';
    display: block;
    position: absolute;
    z-index: var(--layer-tv-effects);
    top: 0;
    left: 0;
    width: 100%;
    pointer-events: none;
  }

  &::before {
    height: 90px;
    background: linear-gradient(
      180deg,
      transparent 0,
      #fffafa26 50%,
      transparent
    );
    animation: vline 8s linear infinite;
  }

  &::after {
    height: 100%;
    background-image: repeating-linear-gradient(
      transparent,
      transparent 6px,
      rgba(255, 255, 255, 0.03) 6px,
      rgba(255, 255, 255, 0.03) 12px
    );
  }
}

.tv-content {
  position: relative;
  z-index: var(--layer-content);
  overflow: hidden auto;
  background-color: rgba(0, 0, 0, 0.4);
}
